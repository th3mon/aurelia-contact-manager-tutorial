{"version":3,"sources":["app.js","contact-list.js","environment.js","main.js","no-selection.js","utility.js","web-api.js","resources/index.js","contact-detail.js","/Users/ftkdevelopment/Projects/aurelia-contact-manager-tutorial/src/test.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","ContactList","inject","constructor","api","contacts","created","getContactList","then","select","contact","selectedId","id","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","NoSelection","message","areEqual","obj1","obj2","Object","keys","every","key","hasOwnProperty","latency","getId","firstName","lastName","email","phoneNumber","WebAPI","isRequesting","resolve","setTimeout","results","x","getContactDetails","found","filter","JSON","parse","stringify","saveContact","instance","index","indexOf","push","ContactDetail","activate","params","routeConfig","navModel","setTitle","originalContact","canSave","save","canDeactivate","confirm"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter (config, router) {\n    config.title = 'Contacts';\n    config.map([{\n      route: '',\n      moduleId: 'no-selection',\n      title: 'Select'\n    }, {\n      route: 'contacts/:id',\n      moduleId: 'contact-detail',\n      name: 'contacts'\n    }]);\n\n    this.router = router;\n  }\n}\n","import {WebAPI} from './web-api';\n\nexport class ContactList {\n  static inject() { return [WebAPI] };\n\n  constructor(api){\n    this.api = api;\n    this.contacts = [];\n  }\n\n  created(){\n    this.api.getContactList()\n      .then(contacts => this.contacts = contacts);\n  }\n\n  select(contact){\n    this.selectedId = contact.id;\n    return true;\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NoSelection {\n  constructor () {\n    this.message = 'Please Select Contact.';\n  }\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  // isRequesting = false;\n  constructor() {\n    this.isRequesting = false;\n  }\n\n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {WebAPI} from './web-api';\nimport {areEqual} from './utility';\n\nexport class ContactDetail {\n  static inject () {\n    return [WebAPI];\n  }\n\n  constructor (api) {\n    this.api = api;\n  }\n\n  activate (params, routeConfig) {\n    this.routeConfig = routeConfig;\n\n    return this.api.getContactDetails(params.id)\n      .then(contact => {\n        this.contact = contact;\n        this.routeConfig.navModel.setTitle(contact.firstName);\n        this.originalContact = JSON.parse(JSON.stringify(contact));\n      });\n  }\n\n  get canSave () {\n    return this.contact.firstName &&\n      this.contact.lastName &&\n      !this.api.isRequesting;\n  }\n\n  save () {\n    this.api.saveContact(this.contact)\n      .then(contact => {\n        this.contact = contact;\n        this.routeConfig.navModel.setTitle(contact.firstName);\n        this.originalContact = JSON.parse(JSON.stringify(contact));\n      });\n  }\n\n  canDeactivate () {\n    if (!areEqual(this.originalContact, this.contact)) {\n      return confirm('You have unsaved changes. Are you sure you wish to leave?');\n    }\n\n    return true;\n  }\n}\n",null],"sourceRoot":"../src"}